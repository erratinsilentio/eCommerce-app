{"ast":null,"code":"import { gql } from \"@apollo/client\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/',\n  cache: new InMemoryCache(),\n  onError: _ref => {\n    let {\n      networkError,\n      graphQLErrors\n    } = _ref;\n    console.log('graphQLErrors', graphQLErrors);\n    console.log('networkError', networkError);\n  }\n});\nconst GET_DATA = gql`\nquery GetData {\n    categories {\n    name\n    products{\n      name\n      id\n      category\n      inStock\n      description\n      brand\n      gallery\n      attributes{\n       name\n        id\n        type\n        items{\n          id\n          value\n          displayValue\n        }\n      }\n      prices{\n        currency{\n          label\n          symbol\n        }\n        amount\n        \n      } \n    }\n  }\n\n    currencies{\n      label\n      symbol\n    }\n  }\n`;\nconst newData = client.query({\n  query: gql`\n    query GetData {\n        categories {\n        name\n        products{\n          name\n          id\n          category\n          inStock\n          description\n          brand\n          gallery\n          attributes{\n           name\n            id\n            type\n            items{\n              id\n              value\n              displayValue\n            }\n          }\n          prices{\n            currency{\n              label\n              symbol\n            }\n            amount\n            \n          } \n        }\n      }\n    \n        currencies{\n          label\n          symbol\n        }\n      }\n    `\n}).then(result => console.log(result)).then(console.log(newData));\nexport { GET_DATA, newData };","map":{"version":3,"names":["gql","ApolloClient","InMemoryCache","ApolloProvider","client","uri","cache","onError","networkError","graphQLErrors","console","log","GET_DATA","newData","query","then","result"],"sources":["/Users/kacperkondracki/Desktop/TOP/REACT/scandiweb/src/data.js"],"sourcesContent":["import { gql } from \"@apollo/client\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\n\nconst client = new ApolloClient({\n    uri: 'http://localhost:4000/',\n    cache: new InMemoryCache(),\n    onError: ({ networkError, graphQLErrors }) => {\n      console.log('graphQLErrors', graphQLErrors)\n      console.log('networkError', networkError)\n    }\n  });\n\nconst GET_DATA = gql`\nquery GetData {\n    categories {\n    name\n    products{\n      name\n      id\n      category\n      inStock\n      description\n      brand\n      gallery\n      attributes{\n       name\n        id\n        type\n        items{\n          id\n          value\n          displayValue\n        }\n      }\n      prices{\n        currency{\n          label\n          symbol\n        }\n        amount\n        \n      } \n    }\n  }\n\n    currencies{\n      label\n      symbol\n    }\n  }\n`;\n\n\nconst newData =\nclient\n  .query({\n    query: gql`\n    query GetData {\n        categories {\n        name\n        products{\n          name\n          id\n          category\n          inStock\n          description\n          brand\n          gallery\n          attributes{\n           name\n            id\n            type\n            items{\n              id\n              value\n              displayValue\n            }\n          }\n          prices{\n            currency{\n              label\n              symbol\n            }\n            amount\n            \n          } \n        }\n      }\n    \n        currencies{\n          label\n          symbol\n        }\n      }\n    `,\n  })\n  .then(result => console.log(result))\n  .then(console.log(newData))\n\nexport  {GET_DATA, newData};"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,cAAtC,QAA4D,gBAA5D;AAEA,MAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiB;EAC5BI,GAAG,EAAE,wBADuB;EAE5BC,KAAK,EAAE,IAAIJ,aAAJ,EAFqB;EAG5BK,OAAO,EAAE,QAAqC;IAAA,IAApC;MAAEC,YAAF;MAAgBC;IAAhB,CAAoC;IAC5CC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,aAA7B;IACAC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,YAA5B;EACD;AAN2B,CAAjB,CAAf;AASA,MAAMI,QAAQ,GAAGZ,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtCA;AAyCA,MAAMa,OAAO,GACbT,MAAM,CACHU,KADH,CACS;EACLA,KAAK,EAAEd,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvCS,CADT,EA0CGe,IA1CH,CA0CQC,MAAM,IAAIN,OAAO,CAACC,GAAR,CAAYK,MAAZ,CA1ClB,EA2CGD,IA3CH,CA2CQL,OAAO,CAACC,GAAR,CAAYE,OAAZ,CA3CR,CADA;AA8CA,SAASD,QAAT,EAAmBC,OAAnB"},"metadata":{},"sourceType":"module"}