{"ast":null,"code":"var _jsxFileName = \"/Users/kacperkondracki/Desktop/TOP/REACT/scandiweb/src/App.js\";\nimport React, { PureComponent, Suspense } from \"react\";\nimport './App.css';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { GET_CATEGORIES, GET_CURRENCIES } from \"./data\";\nimport getCategories from \"./fetch\";\nimport { render } from \"@testing-library/react\";\nimport { responsePathAsArray } from \"graphql\";\nimport { toHaveDisplayValue } from \"@testing-library/jest-dom/dist/matchers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/',\n  cache: new InMemoryCache(),\n  onError: _ref => {\n    let {\n      networkError,\n      graphQLErrors\n    } = _ref;\n    console.log('graphQLErrors', graphQLErrors);\n    console.log('networkError', networkError);\n  }\n});\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.getCurrencies = async () => {\n      let res = await client.query({\n        query: GET_CURRENCIES\n      });\n      let data = await res;\n      let currencies = data.data.currencies;\n      this.setState({\n        currencies: currencies\n      });\n      return currencies;\n    };\n\n    this.state = {\n      currencies: [],\n      categories: []\n    };\n  }\n\n  componentDidMount() {\n    this.getCurrencies();\n    getCategories().then(result => this.setState({\n      categories: result\n    }));\n    console.log(this.state);\n  }\n\n  render() {\n    return;\n\n    /*#__PURE__*/\n    _jsxDEV(Suspense, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"aaa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","PureComponent","Suspense","ApolloClient","InMemoryCache","GET_CATEGORIES","GET_CURRENCIES","getCategories","render","responsePathAsArray","toHaveDisplayValue","client","uri","cache","onError","networkError","graphQLErrors","console","log","App","constructor","props","getCurrencies","res","query","data","currencies","setState","state","categories","componentDidMount","then","result"],"sources":["/Users/kacperkondracki/Desktop/TOP/REACT/scandiweb/src/App.js"],"sourcesContent":["import React, { PureComponent, Suspense } from \"react\";\nimport './App.css';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { GET_CATEGORIES, GET_CURRENCIES } from \"./data\";\nimport getCategories from \"./fetch\";\nimport { render } from \"@testing-library/react\";\nimport { responsePathAsArray } from \"graphql\";\nimport { toHaveDisplayValue } from \"@testing-library/jest-dom/dist/matchers\";\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/',\n  cache: new InMemoryCache(),\n  onError: ({ networkError, graphQLErrors }) => {\n    console.log('graphQLErrors', graphQLErrors)\n    console.log('networkError', networkError)\n  }\n});\n\nclass App extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currencies: [],\n      categories: []\n    };\n  }\n\n  getCurrencies = async () => {\n    let res = await client.query({\n      query: GET_CURRENCIES\n    })\n    let data = await res;\n    let currencies = data.data.currencies\n    this.setState({currencies: currencies})\n\n    return currencies;\n  }\n\n  \n  componentDidMount() {\n    this.getCurrencies()\n    getCategories().then(result => this.setState({categories: result}))\n    console.log(this.state)\n  }  \n\n  render() {\n    return\n    <Suspense>\n      <h1>aaa</h1>\n    </Suspense>\n  }\n\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAO,WAAP;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,QAA/C;AACA,OAAOC,aAAP,MAA0B,SAA1B;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,mBAAT,QAAoC,SAApC;AACA,SAASC,kBAAT,QAAmC,yCAAnC;;AAEA,MAAMC,MAAM,GAAG,IAAIR,YAAJ,CAAiB;EAC9BS,GAAG,EAAE,wBADyB;EAE9BC,KAAK,EAAE,IAAIT,aAAJ,EAFuB;EAG9BU,OAAO,EAAE,QAAqC;IAAA,IAApC;MAAEC,YAAF;MAAgBC;IAAhB,CAAoC;IAC5CC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,aAA7B;IACAC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,YAA5B;EACD;AAN6B,CAAjB,CAAf;;AASA,MAAMI,GAAN,SAAkBlB,aAAlB,CAAgC;EAE9BmB,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAQnBC,aARmB,GAQH,YAAY;MAC1B,IAAIC,GAAG,GAAG,MAAMZ,MAAM,CAACa,KAAP,CAAa;QAC3BA,KAAK,EAAElB;MADoB,CAAb,CAAhB;MAGA,IAAImB,IAAI,GAAG,MAAMF,GAAjB;MACA,IAAIG,UAAU,GAAGD,IAAI,CAACA,IAAL,CAAUC,UAA3B;MACA,KAAKC,QAAL,CAAc;QAACD,UAAU,EAAEA;MAAb,CAAd;MAEA,OAAOA,UAAP;IACD,CAjBkB;;IAEjB,KAAKE,KAAL,GAAa;MACXF,UAAU,EAAE,EADD;MAEXG,UAAU,EAAE;IAFD,CAAb;EAID;;EAcDC,iBAAiB,GAAG;IAClB,KAAKR,aAAL;IACAf,aAAa,GAAGwB,IAAhB,CAAqBC,MAAM,IAAI,KAAKL,QAAL,CAAc;MAACE,UAAU,EAAEG;IAAb,CAAd,CAA/B;IACAf,OAAO,CAACC,GAAR,CAAY,KAAKU,KAAjB;EACD;;EAEDpB,MAAM,GAAG;IACP;;IACA;IAAA,QAAC,QAAD;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAGD;;AAjC6B;;AAqChC,eAAeW,GAAf"},"metadata":{},"sourceType":"module"}