{"ast":null,"code":"var _jsxFileName = \"/Users/kacperkondracki/Desktop/TOP/REACT/scandiweb/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { PureComponent } from \"react\";\nimport './App.css';\nimport { useQuery, gql } from \"@apollo/client\";\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { newData } from \"./data\";\nimport { GET_DATA } from \"./data\";\nimport fetchData from \"./fetch\";\nimport { render } from \"@testing-library/react\";\nimport { request } from 'graphql-request';\nimport { responsePathAsArray } from \"graphql\";\nimport { toHaveDisplayValue } from \"@testing-library/jest-dom/dist/matchers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/',\n  cache: new InMemoryCache(),\n  onError: _ref => {\n    let {\n      networkError,\n      graphQLErrors\n    } = _ref;\n    console.log('graphQLErrors', graphQLErrors);\n    console.log('networkError', networkError);\n  }\n});\n\nfunction someData() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_DATA);\n  return data;\n}\n\n_s(someData, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.getData = async () => {\n      let res = await client.query({\n        query: GET_DATA\n      });\n      let data = await res;\n      this.setState({\n        data\n      });\n    };\n\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"aaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","PureComponent","useQuery","gql","ApolloClient","InMemoryCache","newData","GET_DATA","fetchData","render","request","responsePathAsArray","toHaveDisplayValue","client","uri","cache","onError","networkError","graphQLErrors","console","log","someData","loading","error","data","App","constructor","props","getData","res","query","setState","state","componentDidMount"],"sources":["/Users/kacperkondracki/Desktop/TOP/REACT/scandiweb/src/App.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\nimport './App.css';\nimport { useQuery, gql } from \"@apollo/client\";\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { newData } from \"./data\";\nimport { GET_DATA } from \"./data\";\nimport fetchData from \"./fetch\";\nimport { render } from \"@testing-library/react\";\nimport { request } from 'graphql-request';\nimport { responsePathAsArray } from \"graphql\";\nimport { toHaveDisplayValue } from \"@testing-library/jest-dom/dist/matchers\";\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/',\n  cache: new InMemoryCache(),\n  onError: ({ networkError, graphQLErrors }) => {\n    console.log('graphQLErrors', graphQLErrors)\n    console.log('networkError', networkError)\n  }\n});\n\nfunction someData(){\n  const { loading, error, data } = useQuery(GET_DATA);\n  return data;\n  \n}\n\nclass App extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n    };\n  }\n\n  getData = async () => {\n    let res = await client.query({\n      query: GET_DATA\n    })\n    let data = await res;\n    this.setState({data})\n  }\n  \n  componentDidMount() {\n    this.getData()\n  }  \n\nrender(){\n  console.log(this.props)\n  return <h1>aaa</h1>\n  \n}\n\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAO,WAAP;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,SAAP,MAAsB,SAAtB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,mBAAT,QAAoC,SAApC;AACA,SAASC,kBAAT,QAAmC,yCAAnC;;AAEA,MAAMC,MAAM,GAAG,IAAIT,YAAJ,CAAiB;EAC9BU,GAAG,EAAE,wBADyB;EAE9BC,KAAK,EAAE,IAAIV,aAAJ,EAFuB;EAG9BW,OAAO,EAAE,QAAqC;IAAA,IAApC;MAAEC,YAAF;MAAgBC;IAAhB,CAAoC;IAC5CC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,aAA7B;IACAC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,YAA5B;EACD;AAN6B,CAAjB,CAAf;;AASA,SAASI,QAAT,GAAmB;EAAA;;EACjB,MAAM;IAAEC,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAA2BtB,QAAQ,CAACK,QAAD,CAAzC;EACA,OAAOiB,IAAP;AAED;;GAJQH,Q;UAC0BnB,Q;;;AAKnC,MAAMuB,GAAN,SAAkBxB,aAAlB,CAAgC;EAE9ByB,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAOnBC,OAPmB,GAOT,YAAY;MACpB,IAAIC,GAAG,GAAG,MAAMhB,MAAM,CAACiB,KAAP,CAAa;QAC3BA,KAAK,EAAEvB;MADoB,CAAb,CAAhB;MAGA,IAAIiB,IAAI,GAAG,MAAMK,GAAjB;MACA,KAAKE,QAAL,CAAc;QAACP;MAAD,CAAd;IACD,CAbkB;;IAEjB,KAAKQ,KAAL,GAAa;MACXR,IAAI,EAAE;IADK,CAAb;EAGD;;EAUDS,iBAAiB,GAAG;IAClB,KAAKL,OAAL;EACD;;EAEHnB,MAAM,GAAE;IACNU,OAAO,CAACC,GAAR,CAAY,KAAKO,KAAjB;IACA,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EAED;;AAzB+B;;AA6BhC,eAAeF,GAAf"},"metadata":{},"sourceType":"module"}