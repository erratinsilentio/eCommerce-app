{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseBatchRequestsExtendedArgs = exports.parseRawRequestExtendedArgs = exports.parseRequestExtendedArgs = exports.parseBatchRequestArgs = exports.parseRawRequestArgs = exports.parseRequestArgs = void 0;\n\nfunction parseRequestArgs(documentOrOptions, variables, requestHeaders) {\n  return documentOrOptions.document ? documentOrOptions : {\n    document: documentOrOptions,\n    variables: variables,\n    requestHeaders: requestHeaders,\n    signal: undefined\n  };\n}\n\nexports.parseRequestArgs = parseRequestArgs;\n\nfunction parseRawRequestArgs(queryOrOptions, variables, requestHeaders) {\n  return queryOrOptions.query ? queryOrOptions : {\n    query: queryOrOptions,\n    variables: variables,\n    requestHeaders: requestHeaders,\n    signal: undefined\n  };\n}\n\nexports.parseRawRequestArgs = parseRawRequestArgs;\n\nfunction parseBatchRequestArgs(documentsOrOptions, requestHeaders) {\n  return documentsOrOptions.documents ? documentsOrOptions : {\n    documents: documentsOrOptions,\n    requestHeaders: requestHeaders,\n    signal: undefined\n  };\n}\n\nexports.parseBatchRequestArgs = parseBatchRequestArgs;\n\nfunction parseRequestExtendedArgs(urlOrOptions, document, variables, requestHeaders) {\n  return urlOrOptions.document ? urlOrOptions : {\n    url: urlOrOptions,\n    document: document,\n    variables: variables,\n    requestHeaders: requestHeaders,\n    signal: undefined\n  };\n}\n\nexports.parseRequestExtendedArgs = parseRequestExtendedArgs;\n\nfunction parseRawRequestExtendedArgs(urlOrOptions, query, variables, requestHeaders) {\n  return urlOrOptions.query ? urlOrOptions : {\n    url: urlOrOptions,\n    query: query,\n    variables: variables,\n    requestHeaders: requestHeaders,\n    signal: undefined\n  };\n}\n\nexports.parseRawRequestExtendedArgs = parseRawRequestExtendedArgs;\n\nfunction parseBatchRequestsExtendedArgs(urlOrOptions, documents, requestHeaders) {\n  return urlOrOptions.documents ? urlOrOptions : {\n    url: urlOrOptions,\n    documents: documents,\n    requestHeaders: requestHeaders,\n    signal: undefined\n  };\n}\n\nexports.parseBatchRequestsExtendedArgs = parseBatchRequestsExtendedArgs;","map":{"version":3,"mappings":";;;;;;;AAaA,SAAgBA,gBAAhB,CACEC,iBADF,EAEEC,SAFF,EAGEC,cAHF,EAG6C;EAE3C,OAAQF,iBAAuC,CAACG,QAAxC,GACHH,iBADG,GAEH;IACCG,QAAQ,EAAEH,iBADX;IAECC,SAAS,EAAEA,SAFZ;IAGCC,cAAc,EAAEA,cAHjB;IAICE,MAAM,EAAEC;EAJT,CAFL;AAQD;;AAbDC;;AAeA,SAAgBC,mBAAhB,CACEC,cADF,EAEEP,SAFF,EAGEC,cAHF,EAG6C;EAE3C,OAAQM,cAAuC,CAACC,KAAxC,GACHD,cADG,GAEJ;IACEC,KAAK,EAAED,cADT;IAEEP,SAAS,EAAEA,SAFb;IAGEC,cAAc,EAAEA,cAHlB;IAIEE,MAAM,EAAEC;EAJV,CAFJ;AAQD;;AAbDC;;AAeA,SAAgBI,qBAAhB,CACEC,kBADF,EAEET,cAFF,EAE6C;EAE3C,OAAQS,kBAA8C,CAACC,SAA/C,GACHD,kBADG,GAEJ;IACEC,SAAS,EAAED,kBADb;IAEET,cAAc,EAAEA,cAFlB;IAGEE,MAAM,EAAEC;EAHV,CAFJ;AAOD;;AAXDC;;AAaA,SAAgBO,wBAAhB,CACEC,YADF,EAEEX,QAFF,EAGEF,SAHF,EAIEC,cAJF,EAI6C;EAE3C,OAAQY,YAA0C,CAACX,QAA3C,GACHW,YADG,GAEH;IACCC,GAAG,EAAED,YADN;IAECX,QAAQ,EAAEA,QAFX;IAGCF,SAAS,EAAEA,SAHZ;IAICC,cAAc,EAAEA,cAJjB;IAKCE,MAAM,EAAEC;EALT,CAFL;AASD;;AAfDC;;AAiBA,SAAgBU,2BAAhB,CACEF,YADF,EAEEL,KAFF,EAGER,SAHF,EAIEC,cAJF,EAI6C;EAE3C,OAAQY,YAA6C,CAACL,KAA9C,GACHK,YADG,GAEJ;IACEC,GAAG,EAAED,YADP;IAEEL,KAAK,EAAEA,KAFT;IAGER,SAAS,EAAEA,SAHb;IAIEC,cAAc,EAAEA,cAJlB;IAKEE,MAAM,EAAEC;EALV,CAFJ;AASD;;AAfDC;;AAiBA,SAAgBW,8BAAhB,CACEH,YADF,EAEEF,SAFF,EAGEV,cAHF,EAG6C;EAE3C,OAAQY,YAAgD,CAACF,SAAjD,GACHE,YADG,GAEJ;IACEC,GAAG,EAAED,YADP;IAEEF,SAAS,EAAEA,SAFb;IAGEV,cAAc,EAAEA,cAHlB;IAIEE,MAAM,EAAEC;EAJV,CAFJ;AAQD;;AAbDC","names":["parseRequestArgs","documentOrOptions","variables","requestHeaders","document","signal","undefined","exports","parseRawRequestArgs","queryOrOptions","query","parseBatchRequestArgs","documentsOrOptions","documents","parseRequestExtendedArgs","urlOrOptions","url","parseRawRequestExtendedArgs","parseBatchRequestsExtendedArgs"],"sources":["/Users/kacperkondracki/Desktop/TOP/REACT/scandiweb/node_modules/graphql-request/src/parseArgs.ts"],"sourcesContent":["import {\n  BatchRequestDocument,\n  BatchRequestsOptions,\n  RawRequestOptions,\n  RequestDocument,\n  RequestOptions,\n  BatchRequestsExtendedOptions,\n  RawRequestExtendedOptions,\n  RequestExtendedOptions,\n  Variables,\n} from './types'\nimport * as Dom from './types.dom'\n\nexport function parseRequestArgs<V = Variables>(\n  documentOrOptions: RequestDocument | RequestOptions<V>,\n  variables?: V,\n  requestHeaders?: Dom.RequestInit['headers']\n): RequestOptions<V> {\n  return (documentOrOptions as RequestOptions<V>).document\n    ? (documentOrOptions as RequestOptions<V>)\n    : ({\n        document: documentOrOptions as RequestDocument,\n        variables: variables,\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      } as unknown as RequestOptions<V>)\n}\n\nexport function parseRawRequestArgs<V = Variables>(\n  queryOrOptions: string | RawRequestOptions<V>,\n  variables?: V,\n  requestHeaders?: Dom.RequestInit['headers']\n): RawRequestOptions<V> {\n  return (queryOrOptions as RawRequestOptions<V>).query\n    ? (queryOrOptions as RawRequestOptions<V>)\n    : {\n        query: queryOrOptions as string,\n        variables: variables,\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      }\n}\n\nexport function parseBatchRequestArgs<V = Variables>(\n  documentsOrOptions: BatchRequestDocument<V>[] | BatchRequestsOptions<V>,\n  requestHeaders?: Dom.RequestInit['headers']\n): BatchRequestsOptions<V> {\n  return (documentsOrOptions as BatchRequestsOptions<V>).documents\n    ? (documentsOrOptions as BatchRequestsOptions<V>)\n    : {\n        documents: documentsOrOptions as BatchRequestDocument<V>[],\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      }\n}\n\nexport function parseRequestExtendedArgs<V = Variables>(\n  urlOrOptions: string | RequestExtendedOptions<V>,\n  document?: RequestDocument,\n  variables?: V,\n  requestHeaders?: Dom.RequestInit['headers']\n): RequestExtendedOptions<V> {\n  return (urlOrOptions as RequestExtendedOptions<V>).document\n    ? (urlOrOptions as RequestExtendedOptions<V>)\n    : ({\n        url: urlOrOptions as string,\n        document: document as RequestDocument,\n        variables: variables,\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      } as unknown as RequestExtendedOptions<V>)\n}\n\nexport function parseRawRequestExtendedArgs<V = Variables>(\n  urlOrOptions: string | RawRequestExtendedOptions<V>,\n  query?: string,\n  variables?: V,\n  requestHeaders?: Dom.RequestInit['headers']\n): RawRequestExtendedOptions<V> {\n  return (urlOrOptions as RawRequestExtendedOptions<V>).query\n    ? (urlOrOptions as RawRequestExtendedOptions<V>)\n    : {\n        url: urlOrOptions as string,\n        query: query as string,\n        variables: variables,\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      }\n}\n\nexport function parseBatchRequestsExtendedArgs<V = Variables>(\n  urlOrOptions: string | BatchRequestsExtendedOptions<V>,\n  documents?: BatchRequestDocument<V>[],\n  requestHeaders?: Dom.RequestInit['headers']\n): BatchRequestsExtendedOptions<V> {\n  return (urlOrOptions as BatchRequestsExtendedOptions<V>).documents\n    ? (urlOrOptions as BatchRequestsExtendedOptions<V>)\n    : {\n        url: urlOrOptions as string,\n        documents: documents as BatchRequestDocument<V>[],\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      }\n}\n"]},"metadata":{},"sourceType":"script"}